FROM docker.io/ubuntu:jammy


# Allow apt to be run within a container
# See https://github.com/opencontainers/runc/issues/2517
RUN echo 'APT::Sandbox::User "root";' > /etc/apt/apt.conf.d/sandbox-disable

RUN apt-get update && \
    apt-get install -y systemd sudo curl xz-utils && \
    rm -rf /var/lib/apt/lists/*

# Create yourself
ARG USERNAME

ENV USERNAME=$USERNAME
RUN useradd $USERNAME \
    --home-dir /home/$USERNAME \
    --groups sudo \
    --create-home \
    --shell /bin/bash

ARG PASSWORD_USERNAME
ARG PASSWORD_ROOT
RUN echo "root:$PASSWORD_ROOT" | chpasswd
RUN echo "$USERNAME:$PASSWORD_USERNAME" | chpasswd

USER $USERNAME
WORKDIR /home/$USERNAME

# Let's make everyone happy by having XDG setup
RUN mkdir -p /home/$USERNAME/.local/bin
ENV PATH="/home/$USERNAME/.local/bin:$PATH"

ENV XDG_DATA_HOME=/home/$USERNAME/.local/share
RUN mkdir -p $XDG_DATA_HOME

ENV XDG_CONFIG_HOME=/home/$USERNAME/.config
RUN mkdir -p $XDG_CONFIG_HOME

ENV XDG_CACHE_HOME=/home/$USERNAME/.cache
RUN mkdir -p $XDG_CACHE_HOME

ENV XDG_DATA_DIRS="/usr/local/share:/usr/share"
RUN IFS=':' ; for DATA_DIR in $XDG_DATA_DIRS ; do mkdir -p $DATA_DIR ; done

USER root

ENV XDG_CONFIG_DIRS="/etc/xdg"
RUN IFS=':' ; for CONFIG_DIR in $XDG_CONFIG_DIRS ; do mkdir -p $CONFIG_DIR ; done
USER $USERNAME

# Install tigervnc and tools necesarry for init checks
USER root
RUN apt-get update ; apt-get install -y tigervnc-standalone-server x11-utils iproute2
RUN mkdir -p "$XDG_CONFIG_HOME/vnc" && \
    echo "$PASSWORD_USERNAME" | vncpasswd -f >> $XDG_CONFIG_HOME/vnc/passwd
USER $USERNAME

# A wm and term: i3 and kitty 
USER root
RUN apt-get update ; apt-get install -y i3 kitty
USER $USERNAME
COPY i3.config /home/$USERNAME/.config/i3/config
COPY kitty.conf /home/$USERNAME/.config/kitty/kitty.conf


USER root
COPY init /init
ENTRYPOINT ["/lib/systemd/systemd"]
# USER $USERNAME
# ENTRYPOINT /init 
EXPOSE 5901
ENTRYPOINT ["/lib/systemd/systemd"]
