#!/bin/bash

while getopts "u:n:" opt; do
	case $opt in
		u)
			USERNAME=$OPTARG
			;;
		n)
			NAME=$OPTARG
			;;
		*)
			exit 1
			;;
	esac
done

# Try to obtain the name
while true; do
	if test -z $NAME ; then
		echo -n "Name for the desktop: "
		read -r NAME
	else
		break
	fi
done

# Try to obtain the user name
while true; do
	if test -z $USERNAME ; then

		# Get user name from the $USER variable if not root
		if test -n "$USER" ; then
			echo -e "Using username $USER for non-root user"
			USERNAME=$USER
			continue
		fi
		
		# Get the user name from the id executable if it is available and not root
		if command -v id >/dev/null 2>&1; then
			echo -e "Using username $USERNAME for non-root user"
			USERNAME=$(id -u -n)
			continue
		fi

		# If we cannot detect it, just ask
		echo -n "Username for non-root user: "
		read -r USERNAME
		continue
	fi

	# Ensure a user name other than root is chosen
	if [ "$USERNAME" = "root"  ]; then
		echo "A user other then root needs to be created"
		USERNAME=""
	else
		break
	fi
done

echo -en "Password for $USERNAME: "
read -rs PASSWORD_USERNAME
echo 

echo -en "Password for root: "
read -rs PASSWORD_ROOT
echo

RFB_PORT=5900
while true; do
  if command -v ss ; then
    if ! ss -tulpn | grep $RFB_PORT >/dev/null 2>&1; then
      break
    fi
  elif command -v lsof ; then
    if ! lsof -i -P -n | grep $RFB_PORT >/dev/null 2>&1; then
      break
    fi
  fi
  ((RFB_PORT++))
done
echo "Using rfb port $RFB_PORT"

SHARED_SYS_CERTS_MOUNT=""
SHARED_SYS_CERTS="/etc/pki/ca-trust/source/anchors"
if [ -d "$SHARED_SYS_CERTS" ] ; then
	SHARED_SYS_CERTS_MOUNT="--volume /etc/pki/ca-trust/source/anchors:/etc/pki/ca-trust/source/anchors:ro"
fi

podman build \
	--build-arg USERNAME="$USERNAME" \
    	--build-arg PASSWORD_USERNAME="$PASSWORD_USERNAME" \
    	--build-arg PASSWORD_ROOT="$PASSWORD_ROOT" \
    	$SHARED_SYS_CERTS_MOUNT \
    	--tag "$NAME" \
    	.

IMAGE_ID=$(podman images --format "{{.ID}}" "$NAME" | head -n1)

if command -v loginctl ; then
  loginctl enable-linger "$(id -u)"
fi

podman run \
	--detach \
    	--publish $RFB_PORT:5901 \
    	$SHARED_SYS_CERTS_MOUNT \
    	--security-opt label=disable \
    	--security-opt seccomp=unconfined \
    	--device /dev/fuse:rw \
    	--name "$NAME" \
    	--privileged \
    	"$IMAGE_ID"
